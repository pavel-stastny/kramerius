name: Release new version of kramerius-core

on:
  workflow_dispatch:
    inputs: 
      tag_name:
        description: 'Tag name for the release'
        required: true
      release_name:
        description: 'Release name'
        required: true
    
permissions:
  contents: read

jobs:
  build_zip_docker_image:

    runs-on: ubuntu-latest

    steps:
    
    # Prepare release      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name:  ${{ inputs.tag_name }}
        release_name: ${{ inputs.release_name }}
        body: |
          Description of the release
        draft: true
        prerelease: false

    # Docker image 
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}  

    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: "clean build distZip jib"
           
    - uses: actions/upload-artifact@v3
      with:
        name: search.zip
        path: search/build/libs
   

    - name: List contents of build/distributions directory
      run: |
        ls -R build/distributions/

    - name: Find ZIP file in build/distributions directory
      run: |
        ZIP_FILE=$(find build/distributions -name "*.zip" -type f -print -quit)
        echo "ZIP_FILE=$ZIP_FILE" >> "$GITHUB_OUTPUT"
        echo "Found ZIP file: $ZIP_FILE"
      id: find_zip

    - name: Echo zip file
      env:
        ZIP_FILE: ${{ steps.find_zip.outputs.ZIP_FILE }}
      run: |
        echo "- Found ZIP file: $ZIP_FILE"
      id: echo_zip
  
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        #asset_path: build/distributions/kramerius-7.0.34-dev.zip
        #asset_path: build/distributions/*.zip
        asset_path: ${{ steps.find_zip.outputs.ZIP_FILE }}
        #asset_name: ${{ github.event.release.tag_name }}.zip
        asset_name: ${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
       
